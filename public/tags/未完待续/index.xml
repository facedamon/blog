<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>未完待续 on FaceDamon`s Blog</title>
    <link>http://facedamon.github.io/tags/%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/</link>
    <description>Recent content in 未完待续 on FaceDamon`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 09 Jun 2020 09:09:42 +0800</lastBuildDate>
    
	<atom:link href="http://facedamon.github.io/tags/%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[mongodb (一) | 基本操作]</title>
      <link>http://facedamon.github.io/post/mongodb/1.-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 09 Jun 2020 09:09:42 +0800</pubDate>
      
      <guid>http://facedamon.github.io/post/mongodb/1.-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>基本操作 创建document #use dbname use chapter; 删除document #db.dropDatabase() use chapter; db.dropDatabase() 创建collection #db.createCollection(name, options) # example 集合空间大小614299KB,文档最大个数为</description>
    </item>
    
    <item>
      <title>[nginx (一) | nginx准备]</title>
      <link>http://facedamon.github.io/post/nginx/1.nginx%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 16 Apr 2020 14:23:56 +0800</pubDate>
      
      <guid>http://facedamon.github.io/post/nginx/1.nginx%E5%9F%BA%E7%A1%80/</guid>
      <description>准备环境 首先需要一个内核为Linux 2.6及以上版本的操作系统，因为Linux 2.6及以上内核才支持epoll。在linux上使用selec</description>
    </item>
    
    <item>
      <title>[微服务设计(二) | 如何建模服务]</title>
      <link>http://facedamon.github.io/post/books/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/2.-%E5%A6%82%E4%BD%95%E5%BB%BA%E6%A8%A1%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Mon, 13 Apr 2020 09:55:56 +0800</pubDate>
      
      <guid>http://facedamon.github.io/post/books/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/2.-%E5%A6%82%E4%BD%95%E5%BB%BA%E6%A8%A1%E6%9C%8D%E5%8A%A1/</guid>
      <description>摘要 同过上节的讨论，我们已经知道什么是微服务了，你可能已经迫不及待地想要实现它了。但是从何做起呢？在本节中，我们会讨论如何确定服务之间的边界</description>
    </item>
    
    <item>
      <title>[golang base(十一) | 分布式网络爬虫]</title>
      <link>http://facedamon.github.io/post/golang/base/11.%E5%88%86%E5%B8%83%E5%BC%8F%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</link>
      <pubDate>Fri, 06 Mar 2020 17:08:56 +0800</pubDate>
      
      <guid>http://facedamon.github.io/post/golang/base/11.%E5%88%86%E5%B8%83%E5%BC%8F%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</guid>
      <description>原因 有一定的复杂性 可以灵活调整项目的复杂性 平衡语言/爬虫之间的比重 爬虫分类 通用爬虫，如baidu，google 聚焦爬虫，从互联网获取结构化数</description>
    </item>
    
    <item>
      <title>[设计模式 | 行为模式 | 迭代器模式]</title>
      <link>http://facedamon.github.io/post/design-patterns/behavior-type/lterator/</link>
      <pubDate>Tue, 15 Oct 2019 11:37:56 +0800</pubDate>
      
      <guid>http://facedamon.github.io/post/design-patterns/behavior-type/lterator/</guid>
      <description></description>
    </item>
    
    <item>
      <title>[大型网站技术架构 | 架构模式]</title>
      <link>http://facedamon.github.io/post/books/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/1.-%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 15 Oct 2019 10:13:56 +0800</pubDate>
      
      <guid>http://facedamon.github.io/post/books/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/1.-%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</guid>
      <description>概述 为了解决大型网站面临的高并发访问、海量数据处理、高可靠运行等一系列问题和挑战，大型互联网概述在实践中提出了许多解决方案，以实现网站高性能</description>
    </item>
    
    <item>
      <title>[实战笔记(二) | Go command]</title>
      <link>http://facedamon.github.io/post/golang/effective-golang/%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0%E4%BA%8C-go-command/</link>
      <pubDate>Mon, 14 Oct 2019 01:41:56 +0800</pubDate>
      
      <guid>http://facedamon.github.io/post/golang/effective-golang/%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0%E4%BA%8C-go-command/</guid>
      <description>转载自 https://www.flysnow.org Go开发工具概览 Go is a tool for managing for Go source code. Usage: go command [arguments] The command are: build compile packages and dependencies clean remove object files doc show documentation for package or symbol env print Go environment information bug start a bug report fix run go tool fix on packages fmt run gofmt on package sources generate generate</description>
    </item>
    
  </channel>
</rss>